// Importation de l'objet ENDPOINTS depuis le fichier config-api.js
import { ENDPOINTS } from '../config-api.js';

// Ajout d'un √©couteur d'√©v√©nement √† l'√©l√©ment du formulaire d'authentification admin
document.getElementById('adminLoginForm').addEventListener('submit', async (e) => {
  e.preventDefault(); // Emp√™che l'envoi par d√©faut du formulaire, ce qui permet de g√©rer la soumission en JavaScript

  // R√©cup√©ration des valeurs des champs email et mot de passe du formulaire
  const username = document.getElementById('adminEmail').value;
  const password = document.getElementById('adminPassword').value;

  // R√©cup√©ration de l'√©l√©ment o√π afficher le message de statut de la connexion
  const status = document.getElementById('adminLoginMessage');

  // Cr√©ation du token d'authentification de type Basic en encodant les informations d'identification (username:password) en base64
  const token = btoa(`${username}:${password}`);

  // Configuration des headers de la requ√™te HTTP, notamment l'ajout du token d'authentification
  const headers = {
    'Authorization': `Basic ${token}`, // Ajout de l'autorisation avec le token encod√©
    'Content-Type': 'application/json' // Sp√©cifie que les donn√©es envoy√©es et attendues sont au format JSON
  };

  try {
    // Envoi de la requ√™te HTTP pour r√©cup√©rer les informations de l'utilisateur connect√©
    const res = await fetch(`${ENDPOINTS.users}/me`, { headers });

    // Si la r√©ponse n'est pas correcte (status code != 200), lancer une erreur
    if (!res.ok) throw new Error("Identifiants invalides ou non autoris√©s");

    // Si la requ√™te r√©ussit, convertir la r√©ponse en JSON
    const user = await res.json();

    // ‚úÖ Stockage du token d'authentification dans le localStorage pour une utilisation future
    localStorage.setItem('auth', token);

    // Affichage d'un message de bienvenue avec le nom de l'utilisateur r√©cup√©r√©
    status.textContent = `Bienvenue ${user.name} üëã`; // Affiche le nom de l'utilisateur avec un emoji
    status.style.color = 'green'; // Change la couleur du message de bienvenue en vert

    // üîÅ Redirige l'utilisateur vers la page du dashboard admin apr√®s une connexion r√©ussie
    window.location.href = 'admin/dashboard.html';

  } catch (err) {
    // Si une erreur se produit lors de la requ√™te, afficher un message d'erreur
    console.error(err); // Affiche l'erreur dans la console pour un √©ventuel d√©bogage
    status.textContent = "√âchec de la connexion."; // Affiche le message d'√©chec
    status.style.color = 'red'; // Change la couleur du message d'√©chec en rouge
  }
});
